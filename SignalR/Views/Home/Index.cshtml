@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center container">
    <div class="row">
        <div class="col-4">
            <input / type="text" class="form-control" id="userName" placeholder="Name">
            <input / type="text" class="form-control mt-1" id="message" placeholder="Message">
            <buttun id="btnSendMessage" class="btn btn-primary mt-1">Send Message</buttun>
        </div>
        <div class="col-8 border p-1">
            <ul class="list-group" id="messages">


            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-4 mt-3">
            <div class="alert alert-info">
                <div class="float-left">
                    Connection Status : <strong id="conStatus"></strong>
                </div>
                <div class="float-right">
                    <div id="loading" class="spinner-border" role="status">
                        <span class="sr-only"></span>
                    </div>

                </div>
                <div class="clearfix">
                </div>

            </div>
        </div>
    </div>
    

</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@6.0.22/dist/browser/signalr.min.js"></script>
    <script>

        const connection = new signalR.HubConnectionBuilder().configureLogging(signalR.LogLevel.Debug).withAutomaticReconnect([1000, 1000, 1000, 1000]).withUrl("https://localhost:7241/ChatHub").build();
        $("#conStatus").text(connection.state);
        async function start(){
            try{
                await connection.start();
                $("#conStatus").text(connection.state);
                $("#loading").hide();
                console.log("SignalR Connected.");
            }catch(err){
                console.error(err);
                setTimeout(start,5000);
            }
        }
        connection.onreconnecting(err => {
            console.log(connection.state);
            $("#loading").show();
            $("#conStatus").text(connection.state);
            console.log("errorreconnection:" + err);
        });
        connection.onreconnected((connectionId) => {
            console.log(connection.state);
            $("#loading").hide();
            $("#conStatus").text(connection.state);
            console.log("connectionid: " + connectionId)
        });
        connection.onclose(async()=>{
            console.log(connection.state);
            await start();
        });
        start();
        $("#conStatus").text(connection.state);
        $("#btnSendMessage").click(function () {
            try {
                var userName = $("#userName").val();
                var message  = $("#message").val();
        connection.invoke("SendMessage", userName, message);
            } catch (err) {
                console.error(err);
            }
        });

        $().ready(function(){
            connection.on("ReceiveMessage", (userName, message)=>{
                //console.log(userName,message);
                $("#messages").append(`<li class="list-group-item">${userName}: ${message}</li>`)
            })
        })
    </script>
}
